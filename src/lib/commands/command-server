#!/usr/bin/env bash

while [[ $# -gt 0 ]] 
do
  case $1 in
    r|run )
      RUN="true"
      shift
      ;;

    s|stop )
      STOP="true"
      shift
      ;;

    d|destroy )
      DESTROY="true"
      shift
      ;;

    g|git )
      GIT="true"
      shift
      ;;

    e|edit )
      EDIT="true"
      shift
      ;;

    a|api )
      API="true"
      shift
      ;;

    i|identity )
      IDENTITY="true"
      shift
      ;;

    m|migrate )
      MIGRATE="true"
      shift
      ;;

    ms|mssql )
      MSSQL="true"
      shift
      ;;

    sh|selfhosted )
      SELFHOSTED="true"
      shift
      ;;

    my|mysql )
      MYSQL="true"
      shift
      ;;

    p|postgres )
      POSTGRES="true"
      shift
      ;;

    s|sqlite )
      SQLITE="true"
      shift
      ;;

    x|terminal )
      TERMINAL="true"
      shift
      ;;

    a|api )
      API="true"
      shift
      ;;

    i|identity )
      IDENTITY="true"
      shift
      ;;

    admin )
      ADMIN="true"
      shift
      ;;
    
    mail )
      MAIL="true"
      shift
      ;;

    *)
      echo "Option ${1} is not supported by this command"
      shift
      ;;
  esac
done

if [ -n "$API" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window api
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window api
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window api
  fi
fi

if [ -n "$IDENTITY" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window identity
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window identity
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window identity
  fi
fi

if [ -n "$ADMIN" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window admin-portal
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window admin-portal
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window admin-portal
  fi
fi

if [ -n "$EDIT" ] 
then
    $APPLICATION_LIB_DIR/windows/editor-window server
fi

if [ -n "$GIT" ] 
then
  $APPLICATION_LIB_DIR/windows/git-window server
fi

if [ -n "$MSSQL" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window mssql

    # The database containers tend to conflict when all created at once. All
    # threads try to create the same network and step on each other's toes
    # this is a hack to stagger them.
    # sleep 1
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window mssql
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window mssql
  fi

  if [ -n "$MIGRATE" ] 
  then
    $APPLICATION_LIB_DIR/windows/migrate-window mssql
  fi
fi

if [ -n "$SELFHOSTED" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window selfhosted
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window selfhosted
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window selfhosted
  fi

  if [ -n "$MIGRATE" ] 
  then
    $APPLICATION_LIB_DIR/windows/migrate-window selfhosted
  fi
fi

if [ -n "$MYSQL" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window mysql
    # The database containers tend to conflict when all created at once. All
    # threads try to create the same network and step on each other's toes
    # this is a hack to stagger them.
    # sleep 1
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window mysql
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window mysql
  fi

  if [ -n "$MIGRATE" ] 
  then
    $APPLICATION_LIB_DIR/windows/migrate-window mysql
  fi
fi

if [ -n "$POSTGRES" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window postgres
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window postgres
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window postgres
  fi
  
  if [ -n "$MIGRATE" ] 
  then
    $APPLICATION_LIB_DIR/windows/migrate-window postgres
  fi
fi

if [ -n "$MAIL" ] 
then
  if [ -n "$RUN" ] 
  then
    $APPLICATION_LIB_DIR/windows/run-window mailcatcher
  fi

  if [ -n "$STOP" ] 
  then
    $APPLICATION_LIB_DIR/windows/stop-window mailcatcher
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window mailcatcher
  fi
fi

if [ -n "$SQLITE" ] 
then
  if [ -n "$MIGRATE" ] 
  then
    $APPLICATION_LIB_DIR/windows/migrate-window sqlite
  fi

  if [ -n "$DESTROY" ] 
  then
    $APPLICATION_LIB_DIR/windows/destroy-window sqlite
  fi
fi

if [ -n "$TERMINAL" ] 
then
  $APPLICATION_LIB_DIR/windows/terminal-window server
fi

