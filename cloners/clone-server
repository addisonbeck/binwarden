#!/usr/bin/env bash

source $HOME/bin/binwarden/secrets-managers/secrets-provider

DEVLICENSEBWITEMID="7123e5d3-f837-4a8c-810a-a7ca00fe1fdd"

install_dependencies () {
  if ! command -v docker
  then
    $HOME/bin/binwarden/installers/install-docker
  fi
  if ! command -v dotnet
  then
    $HOME/bin/binwarden/installers/install-dotnet
  fi
  if ! command -v pwsh
  then
    $HOME/bin/binwarden/installers/install-pwsh
  fi

  if [[ -z "${BW_SESSION}" ]]; then
    login_to_bw
  fi

  if [ ! -d "$HOME/bitwarden" ]; then
    cd $HOME
    mkdir bitwarden
  fi
}

clone_repo () {
  cd $HOME/bitwarden
  git clone git@github.com:bitwarden/server.git
  cd server 
}

configure_git () {
  git config blame.ignoreRevsFile .git-blame-ignore-revs

  # NOTE: This is optional in the contributing guide, and maybe should be an option here as well.
  # Setting up a pre-commit hook to run dotnet format
  git config --local core.hooksPath .git-hooks
}

setup_env () {
  cd dev

  # Cloning a .env file from the template
  cp .env.example .env

  # Generating a database password
  generate_passphrase
  DBPASSWORD=$OUTPUT_GENERATE_PASSPHRASE
  sed -i "s/SET_A_PASSWORD_HERE_123/$DBPASSWORD/g" .env

  # Installing the Azurite tools
  pwsh -Command "Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force"

  b -b mssql
  b -b azurite

  pwsh setup_azurite.ps1

  # Running migrations scripts
  pwsh migrate.ps1

  get_dev_license

  # Adding the pfx license to dotnet's source folder
  get_dev_license_password
  LICENSEPW=$OUTPUT_GET_DEV_LICENSE_PASSWORD

  pwsh -Command "using namespace System.Security.Cryptography.X509Certificates; \$store = [X509Store]::new('My', 'CurrentUser', 'ReadWrite'); \$store.Add([X509Certificate2]::new('${PWD}/dev.pfx', '${LICENSEPW}', [X509KeyStorageFlags]::PersistKeySet)); \$store.Dispose()"

  get_secrets_json

  sed -i "s/DB_PASSWORD/$DBPASSWORD/g" secrets.json

  INSTALLATIONID=$(parse_config_item_custom_field "installation-id")
  INSTALLATIONKEY=$(parse_config_item_custom_field "installation-key")
  sed -i "s/INSTALLATION_ID/$INSTALLATIONID/g" secrets.json
  sed -i "s/INSTALLATION_KEY/$INSTALLATIONKEY/g" secrets.json

  pwsh setup_secrets.ps1
}

bw_build_server () {
  install_dependencies
  clone_repo
  configure_git
  setup_env
}

bw_build_server
